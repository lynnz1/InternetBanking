@model TransactionViewModel
@{
    ViewData["Title"] = "Transaction Detail";
}

@{
    string actionString;
    if (Model.ActionType.Equals("Deposit"))
    {
        actionString = "to";
    }
    else
    {
        actionString = "from";
    }
}
<h2 class="text-primary">@Model.ActionType @actionString Account: @Model.AccountNumber (@Model.AccountTypeString())</h2>
<div class="row">
    <div class="col-md-4">
        <form asp-action="TransactionDetail">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" name="id" value="@Model.AccountNumber" />
            <div class="form-group">
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <div class="form-group">

                <label asp-for="Comment" class="control-label"></label>
                <input asp-for="Comment" class="form-control" />

                @Html.ValidationMessage("Amount", new { @class = "text-danger" })
            </div>

            <button class="btn btn-lg btn-primary" type="submit" value="TransactionDetail">Confirm</button>
        </form>
    </div>
    </div>

    <div>
        <a asp-action="Index">Back to Accounts</a>
    </div>

    @*@section Scripts {
            @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
        }*@


